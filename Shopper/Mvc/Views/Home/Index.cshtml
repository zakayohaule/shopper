@using Shopper.Mvc.ViewModels
@using Shared.Mvc.Enums
@using Shopper.Extensions.Helpers
@using System.Collections
@using Newtonsoft.Json
@model Shopper.Mvc.ViewModels.DashboardModel
@{
    var model = Model;
    var weekChartModel = new ChartModel
    {
        Sales = model.Sales,
        ChartId = "week-sales-chart",
        SummaryType = SummaryType.Week
    };

    var todayChartModel = new ChartModel
    {
        Sales = model.Sales,
        ChartId = "today-sales-chart",
        SummaryType = SummaryType.Today
    };

    var monthChartModel = new ChartModel
    {
        Sales = model.Sales,
        ChartId = "month-sales-chart",
        SummaryType = SummaryType.Month
    };

    var annualChartModel = new ChartModel
    {
        Sales = model.Sales,
        ChartId = "annual-sales-chart",
        SummaryType = SummaryType.Year
    };
}

@section css{
    <th:script src="~/plugins/chart.js/Chart.min.js"></th:script>
    <style>
        .tab-content>.tab-pane {
            display: block;
            height: 0;
            overflow: hidden;
        }
        .tab-content>.tab-pane.active {
            height: auto;
        }
    </style>
}

<!-- Left col -->
<section class="col-lg-12 connectedSortable">
    <!-- Custom tabs (Charts with tabs)-->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">
                <i class="fas fa-chart-pie mr-1"></i>
                Summary
            </h3>
            <div class="card-tools">
                <ul class="nav nav-pills ml-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="#today-summary" data-toggle="tab">Today</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#week-summary" data-toggle="tab">This Week</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#month-summary" data-toggle="tab">This Month</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#annual-summary" data-toggle="tab">This Year</a>
                    </li>
                </ul>
            </div>
        </div><!-- /.card-header -->
        <div class="card-body">
            <div class="tab-content p-0">
                <!-- Morris chart - Sales -->
                <div class="chart tab-pane active" id="today-summary">
                    <th:partial name="_Summary" model="model.Summaries.SingleOrDefault(s => s.SummaryType == SummaryType.Today)"/>
                </div>

                <div class="chart tab-pane" id="week-summary">
                    <th:partial name="_Summary" model="model.Summaries.SingleOrDefault(s => s.SummaryType == SummaryType.Week)"/>
                </div>
                <div class="chart tab-pane" id="month-summary">
                    <th:partial name="_Summary" model="model.Summaries.SingleOrDefault(s => s.SummaryType == SummaryType.Month)"/>
                </div>
                <div class="chart tab-pane" id="annual-summary">
                    <th:partial name="_Summary" model="model.Summaries.SingleOrDefault(s => s.SummaryType == SummaryType.Year)"/>
                </div>
            </div>
        </div><!-- /.card-body -->
    </div>
    <!-- /.card -->
</section>
<div class="col-lg-12 chart-summary" id="today-chart">
    <th:partial name="_Chart" model="todayChartModel"/>
    @*<div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header border-0">
                    <div class="d-flex justify-content-between">
                        <h3 class="card-title">Today Sales</h3>
                        $1$ <a href="javascript:void(0);">View Report</a> #1#
                    </div>
                </div>
                <div class="card-body">
                    $1$<div class="d-flex">
                <p class="ml-auto d-flex flex-column text-right">
                    @if (percentage > 0)
                    {
                        <span class="text-success">
                            <i class="fas fa-arrow-up"></i> @percentage%
                        </span>
                    }
                    else
                    {
                        <span class="text-danger">
                            <i class="fas fa-arrow-down"></i> @Math.Abs(percentage)%
                        </span>
                    }
                    <span class="text-muted">Since yesterday</span>
                </p>
            </div>#1#
                    <!-- /.d-flex -->

                    <div class="position-relative mb-4">
                        <canvas id="today-sales-chart" height="300"></canvas>
                    </div>

                    <div class="d-flex flex-row justify-content-end">
                        <span class="mr-2">
                            <i class="fas fa-square text-primary"></i> Today
                        </span>

                        <span>
                            <i class="fas fa-square text-gray"></i> Yesterday
                        </span>
                    </div>
                </div>
            </div>
            <!-- /.card -->
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-header border-0">
                    <h3 class="card-title">Most Selling Products</h3>
                    <div class="card-tools">
                        <a href="#" class="btn btn-tool btn-sm">
                            <i class="fas fa-download"></i>
                        </a>
                        <a href="#" class="btn btn-tool btn-sm">
                            <i class="fas fa-bars"></i>
                        </a>
                    </div>
                </div>
                <div class="card-body table-responsive p-0">
                    <table class="table table-striped table-valign-middle">
                        <thead>
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var product in Model
                            .Sales
                            .GroupBy(s => s.Sku.Product)
                            .OrderByDescending(grouping => grouping.Sum(sale => sale.Quantity)).Take(10))
                        {
                            <tr>
                                <td>
                                    <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                    @product.Key.Name
                                </td>
                                <td>
                                    @product.Sum(sale => sale.Quantity)
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- /.card -->
        </div>
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header border-0">
                    <h3 class="card-title">Most Profitable Products</h3>
                    <div class="card-tools">
                        <a href="#" class="btn btn-tool btn-sm">
                            <i class="fas fa-download"></i>
                        </a>
                        <a href="#" class="btn btn-tool btn-sm">
                            <i class="fas fa-bars"></i>
                        </a>
                    </div>
                </div>
                <div class="card-body table-responsive p-0">
                    <table class="table table-striped table-valign-middle">
                        <thead>
                        <tr>
                            <th>Product</th>
                            <th>Profit</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var product in Model.Sales.GroupBy(s => s.Sku.Product).OrderByDescending(grouping => grouping.Sum(sale => (sale.Quantity * sale.Profit))).Take(10))
                        {
                            <tr>
                                <td>
                                    <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                    @product.Key.Name
                                </td>
                                <td>
                                    @product.Sum(sale => (sale.Quantity * sale.Profit)).ToString("N0")
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>*@
</div>
<div class="col-lg-12 chart-summary" id="week-chart">
    <th:partial name="_Chart" model="weekChartModel"/>
</div>
<div class="col-lg-12 chart-summary" id="month-chart">
    <th:partial name="_Chart" model="monthChartModel"/>
</div>
<div class="col-lg-12 chart-summary" id="annual-chart">
    <th:partial name="_Chart" model="annualChartModel"/>
</div>

@section scripts
{
    <th:script src="~/js/dashboard.js"></th:script>
    <th:partial name="_ChartsJs" model="@weekChartModel"/>
    <th:partial name="_ChartsJs" model="@todayChartModel"/>
    <th:partial name="_ChartsJs" model="@monthChartModel"/>
    <th:partial name="_ChartsJs" model="@annualChartModel"/>
    <script>
    $('.chart-summary').hide();
    $('#today-chart').show();
    </script>
}
