@model Product;

@{
    Layout = "_Layout";
    var product = Model;
}

@section css {
    <th:link rel="stylesheet" href="~/plugins/select2/css/select2.min.css"></th:link>
    <th:link rel="stylesheet" href="~/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css"></th:link>
    <!-- Toastr -->
    <th:link rel="stylesheet" href="~/plugins/toastr/toastr.min.css"></th:link>
}

<div class="card with-border">
    <div class="card-header border-0">
        <div class="d-flex justify-content-between">
            <h3 class="card-title">
                Product Stock Entries - @Model.Name
                @*@if (product.Attributes.Any())
                {
                    <h3>Attributes [@string.Join(", ", product.Attributes.Select(att => att.Attribute.Name))]</h3>
                }*@
            </h3>
        </div>
    </div>
    <!-- /.card-header -->

    <div class="card-body">
        <table class="table table-sm table-hover" style="text-align: center;">
            <thead>
            <tr>
                <th style="width: 10px;">#</th>

                <th>
                    Attributes <br>
                    @if (product.Attributes.Any())
                    {
                        <small>[@string.Join(", ", product.Attributes.Select(att => att.Attribute.Name))]</small>
                    }
                </th>
                <th>Quantity</th>
                <th>Remaining Quantity</th>
                <th>Buying Price</th>
                <th>Selling Price</th>
                <th>Stock Date</th>
                <th>Low Stock Alert Amount</th>
                @if (product.HasExpiration)
                {
                    <th>Expiration Date</th>
                }
                <th></th>
            </tr>
            </thead>
            <tbody>
            @{
                int index = 0;
            }
            @foreach (var sku in Model.Skus)
            {
                var lowStockAmount = sku.LowStockAmount != null ? sku.LowStockAmount.Value.ToString() : "N/A";
                index++;
                <tr>
                    <td>@index</td>
                    @if (product.Skus.Any(sku1 => sku1.SkuAttributes.Any()))
                    {
                        <td style="font-weight: bolder">
                            @string.Join(" - ", sku.SkuAttributes.Select(skuAtt => skuAtt.Option.Name))
                        </td>
                    }
                    else
                    {
                        <td style="font-weight: bolder">
                            N/A
                        </td>
                    }
                    <td>@sku.Quantity</td>
                    <td>
                        @if (sku.LowStockAmount == null || sku.RemainingQuantity > sku.LowStockAmount)
                        {
                            <span>@sku.RemainingQuantity</span>
                        }
                        else if (sku.RemainingQuantity == 0 && sku.LowStockAmount != null)
                        {
                            <span class="badge bg-danger">out of stock</span>
                        }
                        else if (sku.RemainingQuantity != 0 && sku.RemainingQuantity <= sku.LowStockAmount && sku.LowStockAmount != null)
                        {
                            <span>@sku.RemainingQuantity</span>
                            <small class="badge bg-warning"> low stock</small>
                        }
                    </td>
                    <td>@sku.BuyingPrice.ToString("N0")</td>
                    <td>@sku.SellingPrice.ToString("N0")</td>
                    <td>@sku.Date.ToString("dd-MM-yyyy")</td>
                    <th>@lowStockAmount</th>
                    @if (product.HasExpiration)
                    {
                        <td>@sku.Expiration.ExpirationDate.ToString("dd-MM-yyyy")</td>
                    }
                    <td>
                        <th:permission name="stock_edit">
                            <th:a onclick="openFormModal('@Url.Action("OpenProductSkusEditModal", new {id = sku.Id})',
                         'Edit @Model.Name stock item', null,  true)"
                                  class="btn btn-default btn-sm" title="Edit entry">
                                <i class="fas fa-edit"></i>
                            </th:a>
                        </th:permission>
                        <th:permission name="stock_delete">
                            <th:a asp-action="DeleteSku"
                                  asp-route-id="@sku.Id" class="btn btn-default btn-sm btn-delete" title="Delete entry">
                                @* <span class="badge badge-danger" title="Delete product"> *@
                                <i class="fas fa-trash"></i>
                                @* </span> *@
                            </th:a>
                        </th:permission>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <!-- /.card-body -->
</div>
<!-- /.card -->
<th:partial name="Partials/_DynamicModalPopup" model="Model" view-data="ViewData"></th:partial>

@section scripts
{
    <!-- Select2 -->
    <th:script src="~/plugins/select2/js/select2.full.min.js"></th:script>

    <!-- Number formatter -->
    <th:script src="~/js/number-formatter.js"></th:script>

    <script >
    //Initialize Select2 Elements
        $('.select2').select2()

        //Initialize Select2 Elements
        $('.select2bs4').select2({
          theme: 'bootstrap4'
        })
    </script>
    <th:partial name="_ValidationScriptsPartial"></th:partial>
    <th:partial name="Partials/_ToastScript"></th:partial>
    <script>
                // useSubmitClass();
                useDeleteConfirmation();

    function openStockModal(){
        var selected = $("#products option:selected");
        console.log("The select product is: " + selected.html() + " ("+selected.val() + ")");
        if (selected.val()){
            openFormModal("/stocks/" + selected.val() + "/open-stock-modal", 'Add Stock - ' + selected.html() , 'md', true);
            }}
        </script>

}
