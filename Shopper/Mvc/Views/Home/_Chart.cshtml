@using Shared.Mvc.Enums
@using IdentityServer4.Extensions
@using Shopper.Extensions.Helpers
@model Shopper.Mvc.ViewModels.ChartModel
@{
    var model = Model;
    string currentName = "";
    string previousName = "";
    var query = model.Sales.AsEnumerable();
    var percentage = 18;

    switch (Model.SummaryType)
    {
        case SummaryType.Today:
            currentName = "Today";
            previousName = "Yesterday";
            query = query.Where(s => s.SaleInvoice.Date.Date == DateTime.Now.Date);
            break;
        case SummaryType.Week:
            currentName = "This week";
            previousName = "Last week";
            query = query.Where(s => s.SaleInvoice.Date.WithinThisWeek());
            break;
        case SummaryType.Month:
            currentName = "This month";
            previousName = "Last month";
            query = query.Where(s => s.SaleInvoice.Date.Month == DateTime.Now.Month);
            break;
        case SummaryType.Year:
            currentName = "Annual";
            query = query.Where(s => s.SaleInvoice.Date.Year == DateTime.Now.Year);
            break;
    }
}
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header border-0">
                <div class="d-flex justify-content-between">
                    <h3 class="card-title">
                        @currentName Sales
                    </h3>
                    <h4 class="pull-right" id="@Model.ChartId-percentage-div">
                        <span id="@Model.ChartId-percentage">
                        </span>
                        @if (!previousName.IsNullOrEmpty())
                        {
                            <sub style="font-size: 12px">Since @previousName</sub>
                        }
                    </h4>
                    @* <a href="javascript:void(0);">View Report</a> *@
                </div>
            </div>
            <div class="card-body">
                @*@if (!previousName.IsNullOrEmpty())
                {
                    <div class="d-flex">
                        <p class="ml-auto d-flex flex-column text-right">
                            @if (percentage > 0)
                            {
                                <span class="text-success">
                                    <i class="fas fa-arrow-up"></i> @percentage%
                                </span>
                            }
                            else
                            {
                                <span class="text-danger">
                                    <i class="fas fa-arrow-down"></i> @Math.Abs(percentage)%
                                </span>
                            }
                        </p>
                    </div>
                }*@
                <!-- /.d-flex -->

                <div class="position-relative mb-4">
                    <canvas id="@Model.ChartId" height="300"></canvas>
                </div>

                <div class="d-flex flex-row justify-content-end">
                    @if (!currentName.IsNullOrEmpty())
                    {
                        <span class="mr-2">
                            <i class="fas fa-square text-primary"></i> @currentName
                        </span>
                    }

                    @if (!previousName.IsNullOrEmpty())
                    {
                        <span>
                            <i class="fas fa-square text-gray"></i> @previousName
                        </span>
                    }
                </div>
            </div>
        </div>
        <!-- /.card -->
    </div>

    <div class="col-lg-6">
        <div class="card">
            <div class="card-header border-0">
                <h3 class="card-title">Most Selling Products</h3>
                <div class="card-tools">
                    <a href="#" class="btn btn-tool btn-sm">
                        <i class="fas fa-download"></i>
                    </a>
                    <a href="#" class="btn btn-tool btn-sm">
                        <i class="fas fa-bars"></i>
                    </a>
                </div>
            </div>
            <div class="card-body table-responsive p-0">
                <table class="table table-striped table-valign-middle">
                    <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var product in query
                        .GroupBy(s => s.Sku.Product)
                        .OrderByDescending(grouping => grouping.Sum(sale => sale.Sku.Sales.Sum(s => s.Quantity))).Take(10))
                    {
                        <tr>
                            <td>
                                <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                @product.Key.Name
                            </td>
                            <td>
                                @product.Sum(sale => sale.Sku.Sales.Sum(s => s.Quantity))
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <!-- /.card -->
    </div>
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header border-0">
                <h3 class="card-title">Most Profitable Products</h3>
                <div class="card-tools">
                    <a href="#" class="btn btn-tool btn-sm">
                        <i class="fas fa-download"></i>
                    </a>
                    <a href="#" class="btn btn-tool btn-sm">
                        <i class="fas fa-bars"></i>
                    </a>
                </div>
            </div>
            <div class="card-body table-responsive p-0">
                <table class="table table-striped table-valign-middle">
                    <thead>
                    <tr>
                        <th>Product</th>
                        <th>Profit</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var product in query
                        .GroupBy(s => s.Sku.Product)
                        .OrderByDescending(grouping => grouping.Sum(sale => sale.Sku.Sales.Sum(s => s.Quantity*s.Profit))).Take(10))
                    {
                        <tr>
                            <td>
                                <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                @product.Key.Name
                            </td>
                            <td>
                                @product.Sum(sale => sale.Sku.Sales.Sum(s => s.Quantity*s.Profit)).ToString("N0")
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <!-- /.card -->
    </div>
</div>
